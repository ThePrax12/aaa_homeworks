import random
from typing import List


def log(message: str):
    """
    –î–µ–∫–æ—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤—Ä–µ–º—è –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è

    Args:
        message (str): –®–∞–±–ª–æ–Ω —Å–æ–æ–±—â–µ–Ω–∏—è, –∫—É–¥–º –±—É–¥–µ—Ç –ø–æ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ –≤—Ä–µ–º—è.

    Returns:
        function: –î–µ–∫–æ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è.
    """

    def decorator(func):
        def wrapper(*args, **kwargs):
            result = func(*args, **kwargs)
            time = str(random.randint(1, 10))
            text = message.format(time)
            print(text)
            return result

        return wrapper

    return decorator


class Pizza:
    """
    –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –ø–∏—Ü—Ü—ã.

    –ê—Ç—Ä–∏–±—É—Ç—ã:
        _name (str): –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã.
        _size (str | None): –†–∞–∑–º–µ—Ä –ø–∏—Ü—Ü—ã ('L' –∏–ª–∏ 'XL').
        _ingredients (dict): –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –ø–∏—Ü—Ü—ã –∏ –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ.
        _stage (str): –°—Ç–∞—Ç—É—Å –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –ø–∏—Ü—Ü—ã ('Uncooked' –∏–ª–∏ 'Cooked').
    """

    def __init__(self, name: str, ingredients: List[str]):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∏—Ü—Ü—ã —Å –∏–º–µ–Ω–µ–º, –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏ –∏ –Ω–∞—á–∞–ª—å–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.

        Args:
            name (str): –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã.
            ingredients (List[str]): –°–ø–∏—Å–æ–∫ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –ø–∏—Ü—Ü—ã.
        """
        self._name = name
        self._size = None
        self._ingredients = dict.fromkeys(ingredients, 0)
        self._stage = "Uncooked"

    @log("üç≥–ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ {} c!")
    def cook(self, size: str) -> None:
        """
        –ì–æ—Ç–æ–≤–∏–º –ø–∏—Ü—Ü—É, –º–µ–Ω—è–µ–º –µ—ë –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞–∑–º–µ—Ä.

        Args:
            size (str): –†–∞–∑–º–µ—Ä –ø–∏—Ü—Ü—ã ('L' –∏–ª–∏ 'XL').

        Returns:
            None
        """
        if size not in ("L", "XL"):
            print("–ù–µ–≤–µ—Ä–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–∏—Ü—Ü—ã")
            return

        if self._stage == "Cooked":
            print("–ü–∏—Ü—Ü–∞ —É–∂–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∞")
            return

        self._size = size
        self._stage = "Cooked"

        if size == "L":
            self._ingredients = dict.fromkeys(self._ingredients.keys(), 1)
        else:
            self._ingredients = dict.fromkeys(self._ingredients.keys(), 2)

    def dict(self) -> List[str]:
        """
        –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –ø–∏—Ü—Ü—ã.

        Returns:
            List[str]: –°–ø–∏—Å–æ–∫ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –ø–∏—Ü—Ü—ã.
        """
        return list(self._ingredients.keys())

    def __eq__(self, other: object) -> bool:
        """
        –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –¥–≤–µ –ø–∏—Ü—Ü—ã –ø–æ –∏–º–µ–Ω–∏ –∏ —Ä–∞–∑–º–µ—Ä—É.

        Args:
            other (object): –û–±—ä–µ–∫—Ç, —Å –∫–æ—Ç–æ—Ä—ã–º —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–∏—Ü—Ü—É.

        Returns:
            bool: –†–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è.
        """
        if not isinstance(other, Pizza):
            return False
        return (
            self._name == other._name
            and self._size is not None
            and other._size is not None
            and self._size == other._size
        )


class MargheritaPizza(Pizza):
    """
    –ö–ª–∞—Å—Å –¥–ª—è –ø–∏—Ü—Ü—ã '–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞'.
    """

    def __init__(self) -> None:
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∏—Ü—Ü—ã '–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞' —Å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏.
        """
        super().__init__("–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞üßÄ", ["–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å", "–ú–æ—Ü–∞—Ä–µ–ª–ª–∞", "–¢–æ–º–∞—Ç—ã"])


class PepperoniPizza(Pizza):
    """
    –ö–ª–∞—Å—Å –¥–ª—è –ø–∏—Ü—Ü—ã '–ü–µ–ø–µ—Ä–æ–Ω–∏'.
    """

    def __init__(self) -> None:
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∏—Ü—Ü—ã '–ü–µ–ø–µ—Ä–æ–Ω–∏' —Å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏.
        """
        super().__init__("–ü–µ–ø–µ—Ä–æ–Ω–∏üçï", ["–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å", "–ú–æ—Ü–∞—Ä–µ–ª–ª–∞", "–ü–µ–ø–µ—Ä–æ–Ω–∏"])


class HawaiianPizza(Pizza):
    """
    –ö–ª–∞—Å—Å –¥–ª—è –ø–∏—Ü—Ü—ã '–ì–∞–≤–∞–π—Å–∫–∞—è'.
    """

    def __init__(self) -> None:
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∏—Ü—Ü—ã '–ì–∞–≤–∞–π—Å–∫–∞—è' —Å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏.
        """
        super().__init__("–ì–∞–≤–∞–π—Å–∫–∞—èüçç", ["–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å", "–ö—É—Ä–∏—Ü–∞", "–ê–Ω–∞–Ω–∞—Å"])


class ShrimpPizza(Pizza):
    """
    –ö–ª–∞—Å—Å –¥–ª—è –ø–∏—Ü—Ü—ã —Å –∫—Ä–µ–≤–µ—Ç–∫–∞–º–∏.
    """

    def __init__(self) -> None:
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∏—Ü—Ü—ã '–° –∫—Ä–µ–≤–µ—Ç–∫–∞–º–∏' —Å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏.
        """
        super().__init__(
            "–° –∫—Ä–µ–≤–µ—Ç–∫–∞–º–∏üç§", ["–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å", "–ú–æ—Ü–∞—Ä–µ–ª–ª–∞", "–ö—Ä–µ–≤–µ—Ç–∫–∏", "–ó–µ–ª–µ–Ω—å"]
        )
